{{ $_ := set . "ProjectName" "sea-battle" }}

{{ $_ := set . "Os" "linux" }}
{{ $_ := set . "Arch" "amd64" }}
{{ $_ := set . "GoVersion" "1.15.3" }}

{{ $_ := set . "CGo" "0" }}
{{ $_ := printf "CGO_ENABLED=%s GOOS=%s GOARCH=%s" .CGo .Os .Arch | set . "GoFlags" }}

{{ $_ := .ProjectName | replace "-" "_" | set . "ArtifactName" }}
{{ $_ := printf "%s-%s-%s-%s" .ArtifactName .Os .Arch .GoVersion | replace "." "_" | set . "ArtifactName" }}

project: {{ .ProjectName }}
configVersion: 1
---
image: {{ .ProjectName }}
from: gcr.io/distroless/static@sha256:04c5f0473b7ebba65bfdd4125fe81fac1701783549f9b98fd96e3566f6035fa7 # gcr.io/distroless/static:latest
docker:
  ENTRYPOINT: [{{ .ProjectName }}]
import:
- artifact: {{ .ArtifactName }}
  add: /src/out/sea-battle
  to: /usr/bin/sea-battle
  after: setup
---
artifact: {{ .ArtifactName }}
from: golang@sha256:6bdf3cc6cb0509e860e626a339c19b7e842efb8444960bb72d654e33607c34f5 # golang:1.15.3-alpine linux/amd64
git:
- to: /src
  stageDependencies:
    install:
    - go.mod
    - go.sum
    beforeSetup:
    - '**/*.go'
ansible:
  beforeInstall:
  install:
  - name: Install deps
    command: go mod download
    args:
      chdir: /src
  beforeSetup:
  - name: Build binary
    shell: {{ .GoFlags }} go build -ldflags "-s -w" -o ./out/sea-battle ./cmd/sea-battle/main.go
    args:
      chdir: /src
